{"version":3,"sources":["lib/DragOverlay.js","lib/ThresholdSlider.js","lib/ThresholdOverlay.js","lib/index.js","index.js"],"names":["DragOverlay","handleMouseMove","ev","preventDefault","stopPropagation","mouseMoveHandler","_this","props","handleMouseUp","mouseUpHandler","cursor","this","ReactDOM","createPortal","react_default","a","createElement","className","style","document","body","addEventListener","removeEventListener","PureComponent","ThresholdSlider","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getSortedY","memoize_one","data","value","map","obj","sort","b","getUpperPortion","threshold","sortedY","idx","bisect_right","length","getLowerPortion","bisect_left","handleUpperHandleDragStart","setState","dragging","handleLowerHandleDragStart","handleUpperHandleDragging","_this$props","height","minY","maxY","lowerThreshold","referenceNode","ref","current","upperThresholdDomY","clientY","getBoundingClientRect","top","upperThreshold","fromDomYCoord_Linear","Math","min","handleThresholdUpdate","handleLowerHandleDragging","_this$props2","lowerThresholdDomY","max","handleUpperHandleDragEnd","handleLowerHandleDragEnd","createThresholds","snapshot","state","React","createRef","_this$props3","width","upperPortion","lowerPortion","centerPortion","upperPortionDisplay","toFixed","lowerPortionDisplay","centerPortionDisplay","upperDomY","toDomYCoord_Linear","lowerDomY","DragOverlayElem","console","log","src_lib_DragOverlay","xmlns","backgroundColor","borderLeft","jsx","id","d","concat","fill","x","y","dx","dy","stdDeviation","fontSize","textAnchor","dominantBaseline","href","filter","onMouseDown","updateThresholdHandler","_this$props4","ThresholdOverlay","getStyle","overflow","position","pointerEvents","mode","borderStyle","borderColor","borderWidth","display","justifyContent","flexDirection","alignItems","DATA","toConsumableArray","Array","keys","i","App","updateThreshold","_ref","_this$state","lib_ThresholdOverlay","lib","Component","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.f634be55.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n// CSS\nimport \"./DragOverlay.css\"\n\nclass DragOverlay extends PureComponent {\n  render() {\n    let { cursor} = this.props\n    return ReactDOM.createPortal(\n      <div className=\"fullscreen\" style={{cursor:cursor}}></div>,\n      document.body\n    );\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"mousemove\",this.handleMouseMove,true)\n    document.addEventListener(\"mouseup\",this.handleMouseUp,true)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"mousemove\",this.handleMouseMove,true)\n    document.removeEventListener(\"mouseup\",this.handleMouseUp,true)\n  }\n  \n  handleMouseMove = (ev)=>{\n    ev.preventDefault();\n    ev.stopPropagation()\n    let {mouseMoveHandler} = this.props\n    mouseMoveHandler(ev)\n  }\n\n  handleMouseUp = (ev)=>{\n    ev.preventDefault();\n    ev.stopPropagation()\n    let {mouseUpHandler} = this.props\n    mouseUpHandler(ev)\n  }\n}\n\n\nDragOverlay.propTypes = {\n  cursor: PropTypes.string.isRequired,\n  mouseMoveHandler: PropTypes.func.isRequired,\n  mouseUpHandler: PropTypes.func.isRequired\n}\n\nexport default DragOverlay\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bisect_left, bisect_right } from \"bisect\";\nimport { memoize_one } from \"memoize\";\nimport { fromDomYCoord_Linear, toDomYCoord_Linear } from \"plot-utils\";\nimport DragOverlay from \"./DragOverlay\";\n\nclass ThresholdSlider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.snapshot = {};\n    this.state = { dragging: null }; // null/'left'/'right'\n    this.ref = React.createRef();\n  }\n\n  render() {\n    let { data, value, width, height, minY, maxY, upperThreshold, lowerThreshold } = this.props;\n    let { dragging } = this.state;\n    // Get portions\n    let upperPortion = this.getUpperPortion(data, value, upperThreshold);\n    let lowerPortion = this.getLowerPortion(data, value, lowerThreshold);\n    let centerPortion = 100 - (upperPortion + lowerPortion)\n    let upperPortionDisplay = upperPortion.toFixed(1);\n    let lowerPortionDisplay = lowerPortion.toFixed(1);\n    let centerPortionDisplay = centerPortion.toFixed(1);\n    // Get threshold Dom positions\n    let upperDomY = toDomYCoord_Linear(height, minY, maxY, upperThreshold);\n    let lowerDomY = toDomYCoord_Linear(height, minY, maxY, lowerThreshold);\n    // DragOverlay\n    let DragOverlayElem = null;\n\n    console.log(data)\n\n    if (dragging === \"upper\") {\n      DragOverlayElem = <DragOverlay cursor=\"ns-resize\"\n        mouseMoveHandler={this.handleUpperHandleDragging}\n        mouseUpHandler={this.handleUpperHandleDragEnd}\n      />\n    }\n\n    if (dragging === \"lower\") {\n      DragOverlayElem = <DragOverlay cursor=\"ns-resize\"\n        mouseMoveHandler={this.handleLowerHandleDragging}\n        mouseUpHandler={this.handleLowerHandleDragEnd}\n      />\n    }\n\n    return (\n      <div>\n        <svg ref={this.ref}\n          width={width} height={height}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{ backgroundColor: \"#eeeeee\", borderLeft: \"1px solid grey\" }}>\n          <style jsx=\"true\">{`\n            text {\n              fill: white;\n              font-family: Sans;\n              pointer-events: none;\n                  }\n                  `}\n          </style>\n          <defs>\n            <path\n              id=\"upperHandle\"\n              d={`M 0 0 L 5 5 L ${width} 5 L ${width} -20 L 10 -20 z`}\n              fill=\"#cad6d9\" />\n            <filter id=\"upperShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"-2\" stdDeviation=\"2\" />\n            </filter>\n            <path\n              id=\"lowerHandle\"\n              d={`M 0 0 L 5 -5 L ${width} -5 L ${width} 20 L 10 20 z`}\n              fill=\"#cad6d9\" />\n            <filter id=\"lowerShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"2\" />\n            </filter>\n          </defs>\n\n          <rect x=\"0\" y={upperDomY} width={width} height={lowerDomY - upperDomY}\n            style={{ fill: \"#8ea5ab\" }}\n          />\n          <text x={width} y={(upperDomY + lowerDomY) / 2} fontSize=\"smaller\" textAnchor=\"end\" dominantBaseline=\"middle\">{centerPortionDisplay}%</text>\n          <use href=\"#upperHandle\" x=\"0\" y={upperDomY}\n            style={{ cursor: \"ns-resize\", fill: \"grey\", filter: \"url(#upperShadow)\" }}\n            onMouseDown={this.handleUpperHandleDragStart} />\n          <text x={width} y={upperDomY - 10} fontSize=\"smaller\" style={{ fill: \"#758895\" }} textAnchor=\"end\" dominantBaseline=\"middle\">{upperPortionDisplay}%</text>\n          <use href=\"#lowerHandle\" x=\"0\" y={lowerDomY}\n            style={{ cursor: \"ns-resize\", fill: \"grey\", filter: \"url(#lowerShadow)\" }}\n            onMouseDown={this.handleLowerHandleDragStart} />\n          <text x={width} y={lowerDomY + 10} fontSize=\"smaller\" style={{ fill: \"#758895\" }} textAnchor=\"end\" dominantBaseline=\"middle\">{lowerPortionDisplay}%</text>\n        </svg>\n        {DragOverlayElem}\n      </div>\n    );\n  }\n\n  getSortedY = memoize_one((data, value) => {\n    return data.map((obj) => obj[value])\n      .sort((a, b) => a - b);\n  });\n\n  getUpperPortion = memoize_one((data, value, threshold) => {\n    let sortedY = this.getSortedY(data, value);\n    let idx = bisect_right(sortedY, threshold);\n    return (sortedY.length - idx) / sortedY.length * 100;\n  });\n\n  getLowerPortion = memoize_one((data, value, threshold) => {\n    let sortedY = this.getSortedY(data, value);\n    let idx = bisect_left(sortedY, threshold);\n    return (idx + 1) / sortedY.length * 100\n  });\n\n  getCenterPortion(data, value, upperThreshold, lowerThreshold) {\n    let uprP = this.getUpperPortion(data, value, upperThreshold);\n    let lwrP = this.getLowerPortion(data, value, lowerThreshold);\n    let centerP = 100 - uprP - lwrP;\n    return centerP;\n  }\n\n  handleUpperHandleDragStart = (ev) => {\n    this.setState({ dragging: \"upper\" });\n  }\n\n  handleLowerHandleDragStart = (ev) => {\n    this.setState({ dragging: \"lower\" });\n  }\n\n  handleUpperHandleDragging = (ev) => {\n    let { height, minY, maxY, lowerThreshold } = this.props;\n    let referenceNode = this.ref.current;\n    let upperThresholdDomY = ev.clientY - referenceNode.getBoundingClientRect().top;\n    let upperThreshold = fromDomYCoord_Linear(height, minY, maxY, upperThresholdDomY);\n    lowerThreshold = Math.min(lowerThreshold, upperThreshold);\n    this.handleThresholdUpdate(upperThreshold, lowerThreshold);\n  }\n\n  handleLowerHandleDragging = (ev) => {\n    let { height, minY, maxY, upperThreshold } = this.props;\n    let referenceNode = this.ref.current;\n    let lowerThresholdDomY = ev.clientY - referenceNode.getBoundingClientRect().top;\n    let lowerThreshold = fromDomYCoord_Linear(height, minY, maxY, lowerThresholdDomY);\n    upperThreshold = Math.max(lowerThreshold, upperThreshold);\n    this.handleThresholdUpdate(upperThreshold, lowerThreshold);\n  }\n\n  handleUpperHandleDragEnd = (ev) => {\n    this.setState({ dragging: null });\n  }\n\n  handleLowerHandleDragEnd = (ev) => {\n    this.setState({ dragging: null });\n  }\n\n  handleThresholdUpdate(upperThreshold, lowerThreshold) {\n    let { updateThresholdHandler } = this.props;\n    let { minY, maxY } = this.props;\n    upperThreshold = Math.max(minY, Math.min(maxY, upperThreshold));\n    lowerThreshold = Math.max(minY, Math.min(maxY, lowerThreshold));\n    let thresholds = this.createThresholds(upperThreshold, lowerThreshold);\n    updateThresholdHandler(thresholds);\n  }\n\n  createThresholds = memoize_one((upperThreshold, lowerThreshold) => {\n    return { upperThreshold, lowerThreshold };\n  });\n}\n\nThresholdSlider.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  minY: PropTypes.number.isRequired,\n  maxY: PropTypes.number.isRequired,\n  data: PropTypes.array.isRequired,\n  value: PropTypes.string.isRequired,\n  upperThreshold: PropTypes.number.isRequired,\n  lowerThreshold: PropTypes.number.isRequired,\n  updateThresholdHandler: PropTypes.func.isRequired,\n};\n\nexport default ThresholdSlider;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { memoize_one } from \"memoize\";\nimport { toDomYCoord_Linear } from \"plot-utils\";\n\nclass ThresholdOverlay extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.mode = 0; // 0: upper, 1:lower\n    this.ref = React.createRef();\n  }\n\n  getStyle = memoize_one((width, height) => {\n    return { width, height, overflow: \"hidden\", position: \"relative\", pointerEvents: \"none\" };\n  });\n\n  render() {\n    let { width, height, upperThreshold, lowerThreshold, minY, maxY } = this.props;\n    let upperThresholdDomY = toDomYCoord_Linear(height, minY, maxY, upperThreshold);\n    let lowerThresholdDomY = toDomYCoord_Linear(height, minY, maxY, lowerThreshold);\n\n    return (\n      <div style={this.getStyle(width, height)}>\n        <div style={{\n          position: \"absolute\", top: upperThresholdDomY - 1,\n          width: width, height: lowerThresholdDomY - upperThresholdDomY,\n          borderStyle: \"dashed none dashed none\",\n          borderColor: \"red\",\n          borderWidth: 1,\n          display: \"flex\",\n          justifyContent: \"flex-end\"\n        }} >\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            alignItems: \"flex-end\"\n          }}>\n            <div>\n              {upperThreshold.toFixed(1)}\n            </div>\n            <div>\n              {lowerThreshold.toFixed(1)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nThresholdOverlay.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  minY: PropTypes.number.isRequired,\n  maxY: PropTypes.number.isRequired,\n  upperThreshold: PropTypes.number.isRequired,\n  lowerThreshold: PropTypes.number.isRequired,\n};\n\nexport default ThresholdOverlay;\n","import ThresholdSlider from \"./ThresholdSlider\";\nimport ThresholdOverlay from \"./ThresholdOverlay\";\n\nexport default ThresholdSlider;\nexport {ThresholdOverlay};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ThresholdSlider, { ThresholdOverlay } from \"./lib\";\n\nconst DATA = [...new Array(10000).keys()].map(i => ({ x: i, y: i }));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 800,\n      height: 400,\n      lowerThreshold: 100,\n      upperThreshold: 9050\n    }\n  }\n\n  updateThreshold = ({ upperThreshold, lowerThreshold }) => {\n    this.setState({ upperThreshold: upperThreshold, lowerThreshold: lowerThreshold });\n  }\n\n  render() {\n    let { width, height, lowerThreshold, upperThreshold } = this.state;\n    return (\n      <div style={{ display: \"flex\" }}>\n        <ThresholdOverlay\n          width={width}\n          height={height}\n          minY={0}\n          maxY={10000}\n          lowerThreshold={lowerThreshold}\n          upperThreshold={upperThreshold}\n        />\n        <ThresholdSlider\n          data={DATA}\n          value=\"y\"\n          width={80}\n          height={height}\n          minY={0}\n          maxY={10000}\n          lowerThreshold={lowerThreshold}\n          upperThreshold={upperThreshold}\n          updateThresholdHandler={this.updateThreshold}\n        />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}